Å°script [Script File]

This command allows you to execute a sequence of commands stored inside the file specified in [Script File] parameter. 
Example:
script "c:\temp\msg.ncl" 
Example for a script:
infobox "Hello !" "This is the first message"
infobox "Hello !" "This is the second message"
infobox "Hello !" "This is the third message"


-------------------------
Å°monitor [action]

Changes the state of the display monitor. The [action] parameter may contain the following values:
off: Turn off the monitor
on: Turn on the monitor
low: Set the monitor to low power state.

This command only works in systems that support this feature. If you have a problem that NirCmd remains in memory when using this command, you may try to use async_off, async_on and async_low actions instead of on/off/low actions. 
Examples: 
monitor off
monitor on
monitor async_off

-----------------------------
Å°exec [show/hide/min/max] [application + command-line]

Runs an application, and optionally specify one or more command-line parameters for the executed application. The [show/hide/min/max] parameter specifies whether the running application will be visible or not. If 'hide' is specified, the running application won't be visible to the user. If 'max' is specified, the running application window will be maximized. If 'min' is specified, the running application window will be minimized. 
Example: 
exec show "f:\winnt\system32\calc.exe" 
exec hide "c:\temp\wul.exe" /savelangfile 
exec max "c:\temp\test.exe"


Å°exec2 [show/hide/min/max] [working folder] [application + command-line]

Similar to exec command, but also provide another parameter, [working folder], that specifies the default working folder for the application that you run. 
Example: 
exec2 show "f:\winnt\system32" "f:\winnt\system32\calc.exe" 
exec2 hide c:\temp "c:\temp\wul.exe" /savelangfile
execmd [command]

Å°Executes a command of Command-Prompt (Console Window) without displaying anything on the screen. 
Examples: 
execmd del "~$folder.desktop$\calc.lnk" 
execmd mkdir f:\temp\desktop1 
execmd copy "~$folder.desktop$\*.lnk" f:\temp\desktop



-------------------------
Å°wait [milliseconds]

Simply wait the specified number of milliseconds. 
Examples: 
wait 1000 
wait 500


--------------------
Å°setcursor [X] [Y]
Set the position of mouse cursor. The [X] and [Y] parameters specifies the desired cursor position. 
Example: 
setcursor 100 50


Å°setcursorwin [X] [Y]
Set the position of mouse cursor, relative to the top-left corner of the active window. The [X] and [Y] parameters specifies the desired cursor position. 
Example: 
setcursor 100 50


Å°movecursor [X] [Y]
move the mouse cursor. The [X] and [Y] parameters specifies the number of pixels to move. Example: 
movecursor 10 10
--------------------------------
Å°sendkeypress [Keys Combination 1] [Keys Combination 2] [Keys Combination 3] ...

Sends one or more key press combinations to the system. The operating system will behave exactly as the user really pressed the specified keys combination. 
The [Key Combination] parameter specifies a single key press to send or a combination of a single key and shift/ctrl/alt/Windows keys, delimited by '+' character. 
The key in the [Key Combination] parameter can be specifed as numeric virtual key code (For example: 0x2e for Delete key), or as one of the following predefined values: a - z and 0 - 9 (for alphanumeric keys), F1 - F24 (for Fxx keys), shift, ctrl, alt, enter, esc ,leftshift, rightshift, leftctrl, rightctrl, leftmenu, rightmenu, spc (space), down, up, left, right, home, end, insert, delete, plus, comma, minus, period, lwin, rwin (Windows key), apps, pageup, pagedown, tab, multiply, add, subtract, seperator, divide, backspace, pause, capslock, numlock, scroll, printscreen.
You can specify more than one [Key Combination] in a single sendkeypress command.

Here's some examples for using sendkeypress:

Send ctrl+shift+esc to show the task manager of Windows: 
sendkeypress ctrl+shift+esc
Send ctrl+shift+esc to show the task manager of Windows and then move to the next window with alt+tab: 
sendkeypress ctrl+shift+esc alt+tab
Switch the capslock mode: 
sendkeypress capslock
Print 'Nir Sofer' to the current text editor in focus (The shift key combination is used to get the capital letters): 
sendkeypress Shift+n i r spc shift+s o f e r
Save the current screen image into the clipboard (Ctrl+PrintScreen): 
sendkeypress Ctrl+printscreen
Send Ctrl+Shift+K and then Ctrl+Shift+A and then Alt+Shift+P: 
sendkeypress ctrl+shift+k ctrl+shift+a alt+shift+p

-----------------------------------
Å°sendkey [Key] [press | down | up]

Sends a keystroke to the system. The operating system will behave exactly as the user really pressed the specified keys. 
The [Key] parameter specifies the key as virtual key code (For example: 0x2e for Delete key), or as one of the following predefined values: a - z and 0 - 9 (for alphanumeric keys), F1 - F24 (for Fxx keys), shift, ctrl, alt, enter, esc ,leftshift, rightshift, leftctrl, rightctrl, leftmenu, rightmenu, spc (space), down, up, left, right, home, end, insert, delete, plus, comma, minus, period, lwin, rwin (Windows key), apps, pageup, pagedown, tab, multiply, add, subtract, seperator, divide, backspace, pause, capslock, numlock, scroll, printscreen. 
The second parameter specifies the key action: 'press', 'down', or 'up'. For each key down action, you should also add the appropriate key up action.
In the following script example, the system behaves like the user presses Shift+Ctrl+Esc (the task manager should appear): 
sendkey shift down 
sendkey ctrl down 
sendkey esc down 
sendkey shift up 
sendkey ctrl up 
sendkey esc up

More examples: 
sendkey a press 
sendkey f10 press 
sendkey enter press 
sendkey 0x2e press

---------------------------------
Å°sendmouse [right | left | middle] [down | up | click | dblclick]

sendmouse [move] [x] [y]

sendmouse [wheel] [Wheel Value]

Sends the specified mouse event to the system. The operating system will behave exactly as the user really made the specified mouse action. 
Heres some example of sendmouse command:
Sent a right click (For most applications, a context menu is opened): 
sendmouse right click
Sent a double-click with the left mouse button: 
sendmouse left dblclick
Press the left mouse button, move the mouse cursor 20 pixels left and 30 pixels down, and then release the button: 
sendmouse left down 
sendmouse move -30 20 
sendmouse left up
Scroll the mouse wheel 10 units in standard wheel mouse. (On standard wheel mouse, the wheel value should be a multiple of 120). 
sendmouse wheel 1200
---------------------
Å°elevate [Program] {Command-Line Parameters}

For Windows Vista/7/2008 only: Run a program with administrator rights. When the [Program] contains one or more space characters, you must put it in quotes. 
Examples: 
elevate notepad.exe 
elevate notepad.exe C:\Windows\System32\Drivers\etc\HOSTS 
elevate "c:\program files\my software\abc.exe"

Å°elevatecmd [NirCmd command]

For Windows Vista/7/2008 only: Run a NirCmd command with administrator rights. 
Examples: 
elevatecmd regsetval binary "HKLM\Software\Test" "Value1" "6a cb ab dd 80 86 95"

------------------------
